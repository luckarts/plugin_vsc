/* Advanced Animations and Visual Feedback */

/* ===== BUTTON ANIMATIONS ===== */

/* Hover effects */
.action-button {
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.action-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  transition: left 0.5s ease;
}

.action-button:hover::before {
  left: 100%;
}

.action-button:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 
    0 8px 25px rgba(0, 0, 0, 0.15),
    0 0 0 1px var(--vscode-focusBorder);
}

.action-button:active {
  transform: translateY(0) scale(0.98);
  transition: all 0.1s ease;
}

/* ===== LOADING ANIMATIONS ===== */

/* Spinner animation */
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}

@keyframes wave {
  0%, 100% { transform: translateX(0); }
  50% { transform: translateX(10px); }
}

.loading-spinner {
  animation: spin 1s linear infinite;
}

.loading-pulse {
  animation: pulse 1.5s ease-in-out infinite;
}

.loading-wave {
  animation: wave 2s ease-in-out infinite;
}

/* Progress bar animation */
.progress-bar {
  position: relative;
  width: 100%;
  height: 4px;
  background: var(--vscode-progressBar-background);
  border-radius: 2px;
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: var(--vscode-progressBar-foreground);
  border-radius: 2px;
  transition: width 0.3s ease;
}

.progress-indeterminate {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 30%;
  background: var(--vscode-progressBar-foreground);
  border-radius: 2px;
  animation: progressSlide 2s ease-in-out infinite;
}

@keyframes progressSlide {
  0% { left: -30%; }
  50% { left: 100%; }
  100% { left: -30%; }
}

/* ===== SUCCESS ANIMATIONS ===== */

@keyframes checkmark {
  0% {
    stroke-dashoffset: 100;
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    stroke-dashoffset: 0;
    opacity: 1;
  }
}

@keyframes successBounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    transform: translate3d(0, -8px, 0);
  }
  70% {
    transform: translate3d(0, -4px, 0);
  }
  90% {
    transform: translate3d(0, -2px, 0);
  }
}

.success-checkmark {
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  animation: checkmark 0.6s ease-in-out forwards;
}

.success-bounce {
  animation: successBounce 1s ease-in-out;
}

/* ===== ERROR ANIMATIONS ===== */

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-4px); }
  20%, 40%, 60%, 80% { transform: translateX(4px); }
}

@keyframes errorPulse {
  0% {
    box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(220, 53, 69, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);
  }
}

.error-shake {
  animation: shake 0.5s ease-in-out;
}

.error-pulse {
  animation: errorPulse 1s ease-out;
}

/* ===== SLIDE ANIMATIONS ===== */

@keyframes slideInFromRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInFromLeft {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInFromTop {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInFromBottom {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.slide-in-right {
  animation: slideInFromRight 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-in-left {
  animation: slideInFromLeft 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-in-top {
  animation: slideInFromTop 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-in-bottom {
  animation: slideInFromBottom 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

/* ===== FADE ANIMATIONS ===== */

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.fade-in {
  animation: fadeIn 0.3s ease-out;
}

.fade-out {
  animation: fadeOut 0.3s ease-out;
}

.fade-in-scale {
  animation: fadeInScale 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

/* ===== NOTIFICATION ANIMATIONS ===== */

@keyframes notificationSlideIn {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes notificationSlideOut {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

.notification {
  position: fixed;
  top: 20px;
  right: 20px;
  padding: 12px 16px;
  border-radius: 8px;
  background: var(--vscode-notifications-background);
  border: 1px solid var(--vscode-notifications-border);
  color: var(--vscode-notifications-foreground);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  z-index: 1000;
  max-width: 300px;
  animation: notificationSlideIn 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.notification.hiding {
  animation: notificationSlideOut 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.notification.success {
  border-left: 4px solid var(--vscode-terminal-ansiGreen);
}

.notification.error {
  border-left: 4px solid var(--vscode-terminal-ansiRed);
}

.notification.warning {
  border-left: 4px solid var(--vscode-terminal-ansiYellow);
}

.notification.info {
  border-left: 4px solid var(--vscode-terminal-ansiBlue);
}

/* ===== RIPPLE EFFECT ===== */

.ripple {
  position: relative;
  overflow: hidden;
}

.ripple::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.ripple:active::after {
  width: 300px;
  height: 300px;
}

/* ===== GLOW EFFECTS ===== */

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 5px var(--vscode-focusBorder);
  }
  50% {
    box-shadow: 0 0 20px var(--vscode-focusBorder);
  }
}

.glow-effect {
  animation: glow 2s ease-in-out infinite;
}

/* ===== TYPING ANIMATION ===== */

@keyframes typing {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink {
  0%, 50% { border-color: transparent; }
  51%, 100% { border-color: var(--vscode-editorCursor-foreground); }
}

.typing-effect {
  overflow: hidden;
  border-right: 2px solid var(--vscode-editorCursor-foreground);
  white-space: nowrap;
  animation: 
    typing 2s steps(40, end),
    blink 1s step-end infinite;
}

/* ===== MORPHING ANIMATIONS ===== */

@keyframes morphToCheck {
  0% {
    transform: scale(1) rotate(0deg);
  }
  50% {
    transform: scale(0.8) rotate(180deg);
  }
  100% {
    transform: scale(1) rotate(360deg);
  }
}

.morph-to-check {
  animation: morphToCheck 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

/* ===== PARTICLE EFFECTS ===== */

@keyframes particle {
  0% {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translateY(-100px) scale(0);
    opacity: 0;
  }
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: var(--vscode-focusBorder);
  border-radius: 50%;
  animation: particle 1s ease-out forwards;
}

/* ===== STAGGER ANIMATIONS ===== */

.stagger-item {
  opacity: 0;
  transform: translateY(20px);
  animation: staggerFadeIn 0.5s ease-out forwards;
}

.stagger-item:nth-child(1) { animation-delay: 0.1s; }
.stagger-item:nth-child(2) { animation-delay: 0.2s; }
.stagger-item:nth-child(3) { animation-delay: 0.3s; }
.stagger-item:nth-child(4) { animation-delay: 0.4s; }
.stagger-item:nth-child(5) { animation-delay: 0.5s; }

@keyframes staggerFadeIn {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* ===== RESPONSIVE ANIMATIONS ===== */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* ===== UTILITY CLASSES ===== */

.animate-on-hover:hover {
  animation: successBounce 0.6s ease-in-out;
}

.animate-on-click:active {
  animation: errorPulse 0.3s ease-out;
}

.smooth-transition {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.no-animation {
  animation: none !important;
  transition: none !important;
}

/* ===== THEME-SPECIFIC ANIMATIONS ===== */

.vscode-dark .glow-effect {
  box-shadow: 0 0 10px rgba(100, 150, 255, 0.5);
}

.vscode-light .glow-effect {
  box-shadow: 0 0 10px rgba(0, 100, 200, 0.3);
}

.vscode-high-contrast .action-button:hover {
  outline: 2px solid var(--vscode-contrastActiveBorder);
  outline-offset: 2px;
}
